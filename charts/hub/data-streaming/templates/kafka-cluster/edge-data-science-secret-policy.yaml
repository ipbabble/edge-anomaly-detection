{{- range .Values.clusterGroup.managedClusterGroups }}
apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  name: ml-development.edge-secret-data-science-policy
spec:
  remediationAction: enforce
  disabled: false
  policy-templates:
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: edge-secret-data-science
          annotations:
            apps.open-cluster-management.io/deployables: "secret"
        spec:
          remediationAction: enforce
          severity: med
          namespaceSelector:
            include:
              - default
          object-templates:
            - complianceType: mustonlyhave
              objectDefinition:
                kind: Secret
                type: Opaque
                metadata:
                  name: prod-kafka-cluster-cluster-ca-cert
                  namespace: manuela-stormshift-messaging
                apiVersion: v1
                data:
                  ca.crt: '{{ `{{hub index (lookup "v1" "Secret" "ml-development" "prod-kafka-cluster-cluster-ca-cert").data "ca.crt" hub}}` }}'
---
apiVersion: policy.open-cluster-management.io/v1
kind: PlacementBinding
metadata:
  name: edge-secret-data-science-placement-binding
placementRef:
  name: edge-secret-data-science-placement
  kind: PlacementRule
  apiGroup: apps.open-cluster-management.io
subjects:
  - name: edge-secret-data-science-policy
    kind: Policy
    apiGroup: policy.open-cluster-management.io
---
# We need to run this on any managed cluster but not on the HUB
apiVersion: apps.open-cluster-management.io/v1
kind: PlacementRule
metadata:
  name: edge-secret-data-science-placement
spec:
{{- if .clusterSelector }}
  clusterSelector: {{ .clusterSelector | toPrettyJson }}
{{- else }}
  clusterSelector:
    matchLabels:
    {{- range .labels }}
      {{ .name }}: {{ .value }}
    {{- end }}
{{- end }}
{{- end }}
